name: CI

permissions:
  contents: read # to fetch code (actions/checkout)

on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 0 * * *'
  push:
    branches:
      main
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        jobqueue: ["none", "pbs", "slurm"]
        python: ["3.8", "3.9", "3.10"]
        exclude:
          - jobqueue: "pbs"
            python: "3.8"
          - jobqueue: "pbs"
            python: "3.9"
          - jobqueue: "none"
            python: "3.9"
          - jobqueue: "none"
            python: "3.10"
    timeout-minutes: 20
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Black Code Formatter
        uses: lgeiger/black-action@v1.0.1
        with:
          args: ". --check --diff --color -l 88"

      - name: Lint with flake8
        run: |
            python -m pip install --upgrade pip
            pip install flake8
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
      - name: Redirect docker-compose to docker compose
        run: |
            # This is a very rough fix
            echo 'docker-compose() { docker compose "$@"; }' >> ~/.bashrc
            echo 'export -f docker-compose' >> ~/.bashrc
      - name: Setup
        env:
          PYTHON_VERSION: ${{ matrix.python }}
        shell: bash
        run: |
          source ci/${{ matrix.jobqueue }}.sh
          jobqueue_before_install

      - name: Install
        env:
          PYTHON_VERSION: ${{ matrix.python }}
        shell: bash
        run: |
          source ci/${{ matrix.jobqueue }}.sh
          jobqueue_install

      - name: Test
        env:
          PYTHON_VERSION: ${{ matrix.python }}
        shell: bash
        run: |
          source ci/${{ matrix.jobqueue }}.sh
          jobqueue_script

      - name: Cleanup
        env:
          PYTHON_VERSION: ${{ matrix.python }}
        shell: bash
        run: |
          source ci/${{ matrix.jobqueue }}.sh
          jobqueue_after_script

  tutorial:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        jobqueue: ["slurm"]
        python: ["3.10"]
    timeout-minutes: 25
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup
        shell: bash
        env:
          PYTHON_VERSION: ${{ matrix.python }}
        run: |
          source tutorial/jupyter.sh
          start_${{ matrix.jobqueue }}
          launch_tutorial_${{ matrix.jobqueue }}

      - name: Test
        shell: bash
        env:
          PYTHON_VERSION: ${{ matrix.python }}
        run: |
          source tutorial/jupyter.sh
          test_${{ matrix.jobqueue }}

      - name: Stop
        shell: bash
        env:
          PYTHON_VERSION: ${{ matrix.python }}
        run: |
          source tutorial/jupyter.sh
          stop_${{ matrix.jobqueue }}

      - name: Cleanup
        shell: bash
        env:
          PYTHON_VERSION: ${{ matrix.python }}
        run: |
          source tutorial/jupyter.sh
          clean_${{ matrix.jobqueue }}
